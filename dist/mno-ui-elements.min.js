!function(){angular.module("mnoUiElements",[])}(),function(){angular.module("mnoUiElements").component("mnoAdmin",{template:'<div id="sidebar-wrapper" ng-class="{\'reduced\': $ctrl.reduced}"><ul class="sidebar"><li class="sidebar-main"><a ng-click="$ctrl.reduceSidebar()"><span ng-if="!$ctrl.logo">{{$ctrl.name}}</span> <img class="sidebar-logo visible-sm visible-xs" src="{{$ctrl.logo}}"> <span class="menu-icon glyphicon glyphicon-transfer hidden-sm hidden-xs"></span></a></li><div ng-transclude="navigation"></div></ul><div class="sidebar-footer"></div></div><div id="content-wrapper" ng-class="{\'open\': $ctrl.toggled, \'reduced\': $ctrl.reduced}"><header class="header"><a class="header-sidebar-toggle visible-sm visible-xs" ng-click="$ctrl.toggleSidebar()"><div id="hamburger-toggle" ng-class="{\'open\': $ctrl.toggled}"><span></span> <span></span> <span></span></div></a><div ng-transclude="header"></div></header><div class="page-content"><div class="container" ng-transclude="content"></div></div><footer ng-if="!$ctrl.hideFooter"><div ng-transclude="footer"></div></footer></div>',transclude:{header:"mnoAdminHeader",navigation:"mnoAdminNav",content:"mnoAdminContent",footer:"?mnoAdminFooter"},bindings:{logo:"@?",name:"@?",hideFooter:"="},controller:["$scope",function(e){var n;n=this,n.$onInit=function(){return n.toggled=!1,n.reduced=window.innerWidth>992?!1:!0},n.reduceSidebar=function(){return n.toggled?void 0:n.reduced=!n.reduced},n.toggleSidebar=function(){return n.toggled=!n.toggled,n.reduced=!n.toggled},e.$watch(function(){return window.innerWidth},function(e){return e?(n.toggled=!1,n.reduced=window.innerWidth<1200):void 0}),window.onresize=function(){return e.$apply()}}]})}.call(this),function(){angular.module("mnoUiElements").component("mnoCreateTaskModal",{bindings:{resolve:"<",close:"&",dismiss:"&"},template:'<div class="modal-header"></div><div class="modal-body" id="modal-body"><form name="$ctrl.createTaskForm"><div class="form-group"><label>To</label> <input type="text" class="form-control" name="to" ng-model="$ctrl.selectedRecipient" uib-typeahead="recipient as recipient.name for recipient in $ctrl.recipients | filter:{name:$viewValue}" typeahead-min-length="0" autocomplete="off" typeahead-editable="false" required></div><div class="form-group"><label>Title</label> <input type="text" name="title" class="form-control" ng-model="$ctrl.task.title" required></div><div class="row"><div class="col-xs-12 col-md-12"><label>Due Date (optional)</label><p class="input-group"><input type="text" class="form-control" uib-datepicker-popup="{{$ctrl.datepicker.options.format}}" ng-model="$ctrl.taskDueDate" ng-model-options="{timezone: \'utc\'}" is-open="$ctrl.datepicker.opened" close-text="Close"> <span class="input-group-btn"><button type="button" class="btn btn-default" ng-click="$ctrl.openDatepicker()"><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></div><div class="form-group"><label>Message</label> <textarea class="form-control" name="message" rows="3" ng-model="$ctrl.task.message" required></textarea></div></form></div><div class="modal-footer"><button class="btn btn-default" type="button" ng-click="$ctrl.cancel()">Discard</button> <button class="btn btn-warning" ng-disabled="$ctrl.isCreateTaskFormDisabled()" type="button" ng-click="$ctrl.ok(\'draft\')">{{$ctrl.isDraft ? \'Update\' : \'Save as\'}} draft</button> <button class="btn btn-success" ng-disabled="$ctrl.isCreateTaskFormDisabled()" type="button" ng-click="$ctrl.ok()">Send</button></div>',controller:function(){var e,n;return e=this,e.loading=!1,e.$onInit=function(){var n,t;return e.task={},e.isDraft=!_.isEmpty(e.resolve.draftTask),e.datepicker={options:{format:"dd MMMM yyyy"},opened:!1},e.recipients=_.map(e.resolve.recipients,function(n){return{id:n.id,name:e.resolve.recipientFormatter(n)}}),e.isDraft&&(n=e.resolve.draftTask,t=n.task_recipients[0],e.selectedRecipient={id:t.orga_relation_id,name:e.resolve.recipientFormatter(t)},e.task=_.pick(n,["id","title","message"]),null!=n.due_date)?e.taskDueDate=moment.utc(n.due_date).toDate():void 0},e.ok=function(t){var i;return null==t&&(t="sent"),e.loading=!0,angular.merge(e.task,{status:t,orga_relation_id:e.selectedRecipient.id}),_.isDate(e.taskDueDate)&&(e.task.due_date=n(e.taskDueDate)),i=e.isDraft?e.resolve.updateDraftCb:e.resolve.createTaskCb,i(e.task).then(function(){return e.close()})},e.cancel=function(){return e.dismiss()},e.openDatepicker=function(){return e.datepicker.opened=!0},e.isCreateTaskFormDisabled=function(){var n;return e.loading||!(e.createTaskForm.$valid&&(n=e.selectedRecipient)&&null!=n.id)},n=function(e){var n;return n=moment(e).format("YYYY-MM-DD"),moment.utc(n).toISOString()},e}})}.call(this),function(){angular.module("mnoUiElements").component("mnoDropdownFilterSelector",{template:'<div class="btn-group" uib-dropdown ng-if="$ctrl.filters.length"><div id="split-button" class="btn btn-primary" ng-bind="$ctrl.selected.name"></div><button type="button" class="btn btn-primary" uib-dropdown-toggle><span class="caret"></span> <span class="sr-only"></span></button><ul class="dropdown-menu" uib-dropdown-menu role="menu" aria-labelledby="split-button"><li role="menuitem" ng-repeat="filter in $ctrl.filters"><a ng-click="$ctrl.onSelect({$event: {filter: filter}})" ng-bind="filter.name"></a></li></ul></div>',bindings:{filters:"<",selected:"<",onSelect:"&"}})}.call(this),function(){angular.module("mnoUiElements").component("mnoImageSelector",{bindings:{maxSize:"<",defaultPreview:"@",required:"@",isDisabled:"="},require:{form:"^form",ngModel:"ngModel"},template:'<input type="file" ngf-select ng-model="$ctrl.file" ng-change="$ctrl.updateParentModel()" name="logoFile"\n       ngf-pattern="\'image/*,!.svg\'" ngf-accept="\'image/*\'" ngf-max-size="$ctrl.maxSize" ngf-model-invalid="errorFile"\n       ng-disabled="$ctrl.isDisabled">\n\n<div class="top-buffer-1">\n  <img ng-show="$ctrl.file" ngf-thumbnail="$ctrl.file" class="img-thumbnail">\n  <img ng-show="!$ctrl.file && $ctrl.defaultPreview" ng-src="{{$ctrl.defaultPreview}}" class="img-thumbnail">\n</div>\n\n<div class="text-danger" ng-if="$ctrl.form.logoFile.$dirty || $ctrl.form.$submitted" ng-messages="$ctrl.form.logoFile.$error">\n  <p ng-message="maxSize" translate translate-value-size="{{vm.errorFile.size / 1000000|number:1}}MB" translate-value-max="{{$ctrl.maxSize}}">\n    devpl.component.mno_image_selector.file_too_large\n  </p>\n  <p ng-message="pattern" translate>\n    devpl.component.mno_image_selector.authorized_format\n  </p>\n</div>\n\n<div class="progress top-buffer-1" ng-show="$ctrl.file.progress >= 0">\n  <uib-progressbar value="$ctrl.file.progress">\n    <span ng-show="$ctrl.file.result">Upload successful</span>\n    <span ng-show="$ctrl.file.error">An error occurred</span>\n    <span ng-show="!$ctrl.file.result && !$ctrl.file.error">{{$ctrl.file.progress}}%</span>\n  </uib-progressbar>\n</div>',controller:function(){var e;e=this,e.$onInit=function(){return e.ngModel.$render=function(){return e.file=e.ngModel.$viewValue}},e.updateParentModel=function(){return e.ngModel.$setViewValue(e.file)}}})}.call(this),function(){angular.module("mnoUiElements").component("mnoKpi",{template:'<div><div class="visual"><i class="fa" ng-class="vm.icon || \'fa-file-text-o\'"></i></div><div class="details"><div class="loader" ng-show="vm.loading" aria-hidden="true"><i class="fa fa-2x fa-spin fa-refresh"></i></div><div class="body" ng-hide="vm.loading">{{vm.unit}} {{vm.value}}</div><div class="desc">{{vm.description}}</div></div><div ng-if="vm.mnoHref || vm.mnoUiSref || vm.mnoClick" class="more"><a ng-if="vm.mnoHref" ng-href="{{vm.mnoHref}}">{{vm.linkText || "View more"}} <i class="fa fa-arrow-circle-o-right"></i></a> <a ng-if="vm.mnoUiSref" ui-sref="{{vm.mnoUiSref}}">{{vm.linkText || "View more"}} <i class="fa fa-arrow-circle-o-right"></i></a> <a ng-if="vm.mnoClick" ng-click="vm.mnoClick()">{{vm.linkText || "View more"}} <i class="fa fa-arrow-circle-o-right"></i></a></div></div>',transclude:!0,controllerAs:"vm",bindings:{description:"@",loading:"=",value:"@",icon:"@?",unit:"@?",mnoClick:"&?",mnoHref:"@?",mnoUiSref:"@?",linkText:"@?"},controller:function(){var e;e=this}})}.call(this),function(){angular.module("mnoUiElements").component("mnoLoadingEllipsis",{template:'<div class="mno-three-bounce">\n  <div class="mno-bounce1"></div>\n  <div class="mno-bounce2"></div>\n  <div class="mno-bounce3"></div>\n</div>'})}.call(this),function(){angular.module("mnoUiElements").component("mnoMultipleStringField",{bindings:{isDisabled:"="},require:{form:"^form",ngModel:"ngModel"},template:'<ul class="list-group">\n  <!-- List of elements -->\n  <li class="list-group-item key-benefit" ng-class="{\'disabled\' : $ctrl.isDisabled}" ng-repeat="elem in $ctrl.list track by $index">\n    <pre>{{elem}}</pre>\n    <button class="btn btn-sm btn-default" type="button" ng-click="$ctrl.removeElement($index)" ng-if="!$ctrl.isDisabled">\n      <i class="fa fa-times"></i>\n    </button>\n  </li>\n  <!-- New element form -->\n  <li class="list-group-item key-benefit" ng-if="!$ctrl.isDisabled" ng-hide="$ctrl.list.length >= 5">\n    <input type="text" ng-model="$ctrl.new_element" class="form-control" ng-disabled="$ctrl.isDisabled">\n    <button class="btn btn-sm btn-default" type="button" ng-click="$ctrl.addElement($ctrl.new_element)" ng-disabled="!$ctrl.new_element || $ctrl.isDisabled">\n      <i class="fa fa-plus"></i>\n    </button>\n  </li>\n</ul>',controller:["MnoConfirm",function(e){var n;n=this,n.$onInit=function(){return n.ngModel.$render=function(){var e;return n.ngModel.$viewValue&&(e=JSON.parse(n.ngModel.$viewValue)),n.list=e||[]}},n.addElement=function(e){return _.isEmpty(e)?void 0:(n.list.push(e),n.new_element=null,n.ngModel.$setViewValue(n.list))},n.removeElement=function(t){var i;return i={headerText:"Delete entry",bodyText:"Are you sure you want to delete this entry?"},e.showModal(i).then(function(){return n.list.splice(t,1),n.ngModel.$setViewValue(n.list)})}}]})}.call(this),function(){angular.module("mnoUiElements").service("Notifications",["$log","toastr","MnoeNotifications",function(e,n,t){var i;return i={reminder:"info",due:"warning",completed:"info"},this.init=function(){return e.debug("Notifications are enabled"),t.get().then(function(e){var l;return l=e.data.plain(),_.each(l,function(e){var l,r,o,a,s;o=e.notification_type,r=i[o],l=e.message.split("\n").join("</br>"),s=e.title,a=function(){var n;return n={object_id:e.object_id,object_type:e.object_type,notification_type:o},t.notified(n)},n[r](l,s,{closeButton:!0,autoDismiss:!1,tapToDismiss:!0,timeOut:0,extendedTimeOut:0,onHidden:a,allowHtml:!0})})},function(n){return e.error(n)})},this}])}.call(this),function(){angular.module("mnoUiElements").component("mnoSection",{bindings:{heading:"@",description:"@",required:"=",large:"<"},transclude:{headerContentSlot:"?headerContent"},template:'<div class="section row">\n  <div class="left-column" ng-class="$ctrl.large ? \'col-xs-12\' : \'col-md-4\'">\n    <div class="heading">{{$ctrl.heading}}<span ng-if="$ctrl.required">&nbsp;*</span></div>\n    <div class="description">{{$ctrl.description}}</div>\n    <span ng-transclude="headerContentSlot"></span>\n  </div>\n  <div class="right-column" ng-class="$ctrl.large ? \'col-xs-12\' : \'col-md-8\'" ng-transclude></div>\n</div>'})}.call(this),function(){angular.module("sectionTitle",[]).component("mnoSectionTitle",{transclude:!0,require:"^mnoSection",template:'<div class="mno-section-title" ng-transclude></div>'})}.call(this),function(){var e;angular.module("mnoUiElements").controller("MnoRowController",e).component("mnoRow",{bindings:{name:"@",status:"@",mnoRowClick:"&?",mnoRowHref:"@?"},template:'<a ng-if="$ctrl.mnoRowClick" class="row-link" ng-click="ctrl.mnoRowClick()">\n  <span>{{$ctrl.name}}</span>\n  <span>{{$ctrl.status}}</span>\n  </a>\n  <a ng-if="$ctrl.mnoRowHref" class="row-link" ng-href="{{$ctrl.mnoRowHref}}">\n  <span>{{$ctrl.name}}</span>\n    <span>{{$ctrl.status}}</span>\n  </a>'}),e=function(){var e,n;if(this.mnoRowClick,this.mnoRowHref,this.name,e=null!==this.mnoRowClick,n=null!==this.mnoRowHref,(null!=e?e:{1:0})+(null!=n?n:{1:0})+("undefined"!=typeof hasRowSref&&null!==hasRowSref?hasRowSref:{1:0})>1)throw Error("Must specify exactly one of mno-row-click, mno-row-href, for mno-row directive")}}.call(this),function(){angular.module("mnoUiElements").component("mnoShowTaskModal",{bindings:{resolve:"<",close:"&",dismiss:"&"},template:'<div class="modal-header"><div class="close" ng-click="$ctrl.cancel()"><i class="fa fa-times" aria-hidden="true"></i></div></div><div class="modal-body" id="modal-body"><div><label ng-bind="$ctrl.person.label"></label><p ng-bind="$ctrl.person.value"></p></div><div><label>Title</label><p ng-bind="$ctrl.task.title"></p></div><div ng-if="$ctrl.task.due_date"><div class="due-date"><label>Due date</label><p ng-bind="$ctrl.task.due_date | date : $ctrl.dueDateFormat"></p></div><button class="btn btn-primary" type="button" ng-if="$ctrl.showAddReminderButton()" ng-click="$ctrl.toggleReminderForm(true)">Add reminder</button></div><div><div ng-if="$ctrl.reminderDate()" class="reminder"><label>Reminder</label><p ng-bind="$ctrl.reminderDate() | date: $ctrl.dueDateFormat"></p></div><button class="btn btn-warning" type="button" ng-if="$ctrl.showUpdateReminderButton()" ng-click="$ctrl.toggleReminderForm(true)">Update reminder</button> <button class="btn btn-danger" type="button" ng-if="$ctrl.showUpdateReminderButton()" ng-click="$ctrl.deleteReminderOnClick()">Delete reminder</button><div ng-if="$ctrl.isSettingReminder"><form name="$ctrl.reminderForm"><div class="row"><div class="col-xs-12 col-md-12"><label>Reminder</label><p class="input-group"><input type="text" class="form-control" uib-datepicker-popup="{{$ctrl.datepicker.options.format}}" ng-model="$ctrl.reminder.date" ng-model-options="{timezone: \'utc\'}" is-open="$ctrl.datepicker.opened" close-text="Close" ng-required="true"> <span class="input-group-btn"><button type="button" class="btn btn-default" ng-click="$ctrl.openDatepicker()"><i class="glyphicon glyphicon-calendar"></i></button></span></p></div></div><button class="btn btn-default" ng-click="$ctrl.toggleReminderForm(false)">Cancel</button> <button class="btn btn-success" ng-click="$ctrl.setReminderOnClick()" ng-disabled="$ctrl.reminderForm.$invalid">Set Reminder</button></form></div></div><div><label>Message</label><p ng-bind="$ctrl.task.message"></p></div><form name="$ctrl.taskReplyForm" ng-if="$ctrl.isReplying"><div class="form-group"><label>Reply</label> <textarea class="form-control" name="message" rows="3" ng-model="$ctrl.reply.message" required></textarea></div></form></div><div class="modal-footer"><button class="btn" ng-if="$ctrl.showReplyButton()" ng-class="{ \'btn-default\': $ctrl.isReplying, \'btn-primary\': !$ctrl.isReplying }" type="button" ng-click="$ctrl.toggleReplyForm()" ng-bind="$ctrl.isReplying ? \'Cancel\' : \'Reply\'"></button> <button class="btn" ng-class="{ \'btn-success\': !$ctrl.task.markedDone, \'btn-warning\': $ctrl.task.markedDone }" type="button" ng-click="$ctrl.done()" ng-if="!$ctrl.isReplying && $ctrl.canMarkAsDone()">Mark as {{$ctrl.task.markedDone ? \'not done\' : \'done\'}}</button> <button class="btn btn-success" type="button" ng-click="$ctrl.send()" ng-if="$ctrl.isReplying" ng-disabled="$ctrl.taskReplyForm.$invalid">Send</button> <button class="btn btn-success" type="button" ng-click="$ctrl.send(true)" ng-if="$ctrl.isReplying && $ctrl.canSendAndMarkAsDone()" ng-disabled="$ctrl.taskReplyForm.$invalid">Send & mark as done</button></div>',controller:function(){var e,n,t,i,l;return e=this,e.$onInit=function(){return e.task=e.resolve.task,e.person=e.resolve.isInbox?{label:"From",value:e.resolve.nameFormatter(e.task.owner)}:{label:"To",value:e.resolve.nameFormatter(e.task.task_recipients[0])},e.dueDateFormat=e.resolve.dueDateFormat||"medium",e.isReplying=!1,e.isSettingReminder=!1,e.datepicker={options:{format:"dd MMMM yyyy"},opened:!1},e.reply={message:""},e.reminder={date:null},e.resolve.onReadTaskCb(t())},e.done=function(){return e.resolve.markAsDoneCb(!e.task.markedDone).then(function(){return e.close()})},e.send=function(n){return e.resolve.sendReplyCb(e.reply,n).then(function(){return e.close()})},e.cancel=function(){return e.dismiss()},e.openDatepicker=function(){return e.datepicker.opened=!0},e.reminderDate=function(){var e;return e=n(),e&&e.reminder_date},e.setReminderOnClick=function(){var n;if(e.canSetReminder())return n=parseAsUTCDate(e.reminder.date),e.resolve.setReminderCb(n).then(function(n){return null!=n&&(e.task=n),e.toggleReminderForm(!1)})},e.deleteReminderOnClick=function(){return e.reminder.date=null,e.setReminderOnClick()},e.showAddReminderButton=function(){return e.canSetReminder()&&!e.isSettingReminder&&!e.reminderDate()},e.showUpdateReminderButton=function(){return e.canSetReminder()&&!e.isSettingReminder&&e.reminderDate()},e.showReplyButton=function(){return!i()},e.toggleReplyForm=function(){return e.isReplying=!e.isReplying,e.isReplying?void 0:e.reply.message=""},e.toggleReminderForm=function(n){return e.isSettingReminder=n,e.isSettingReminder?e.reminder.date=moment.utc(e.reminderDate()).toDate():void 0},e.canSetReminder=function(){return!i()&&_.isFunction(e.resolve.setReminderCb)&&null!=e.task.due_date},e.canMarkAsDone=function(){return!i()&&null!=e.task.due_date},e.canSendAndMarkAsDone=function(){return e.canMarkAsDone()&&"done"!==e.task.status},n=function(){return _.find(e.task.task_recipients,function(n){return n.user.id===e.resolve.currentUser.id})},t=function(){var e;return e=n(),e&&null!=e.read_at},i=function(){return e.resolve.currentUser.id===_.get(e.task,"owner.user.id")},l=function(e){var n;return n=moment(e).format("YYYY-MM-DD"),moment.utc(n).toISOString()},e}})}.call(this),function(){angular.module("mnoUiElements").directive("mnoRenderDynamicAttr",["$compile",function(e){return{restrict:"A",scope:{rowItem:"<",field:"<"},link:function(n,t){return n.$watchGroup(["rowItem","field"],function(){var i,l,r,o;if(null!=n.rowItem&&null!=n.field)return n.field.stopPropagation&&t.click(function(e){return e.stopPropagation()}),_.isFunction(n.field.render)?(i=n.field.render(n.rowItem),l=i.template,n=angular.merge(n,i.scope)):(o=_.get(n.rowItem,n.field.attr),r=_.isFunction(n.field.filter)?n.field.filter(o):o,null==r&&(r="-"),l="<span>"+r+"</span>"),t.append(e(l)(n))})}}}])}.call(this),function(){angular.module("mnoUiElements").component("mnoSortableTable",{template:'<table st-table="$ctrl.displayedCollection" st-safe-src="$ctrl.rowCollection" st-pipe="$ctrl.pipe()" class="table table-responsive" ng-class="{ \'table-hover\': !$ctrl.loading && $ctrl.hasCollectionItems() }"><thead><tr><th ng-repeat="field in $ctrl.fields" st-sort="{{field.attr}}"><span ng-bind="field.header"></span></th></tr></thead><tbody ng-hide="$ctrl.isLoading || !$ctrl.hasCollectionItems()"><tr ng-repeat="rowItem in $ctrl.displayedCollection" ng-click="$ctrl.rowOnClick({$event: { rowItem: rowItem }})"><td ng-repeat="field in $ctrl.fields" ng-class="field.class" mno-render-dynamic-attr row-item="rowItem" field="field"></td></tr></tbody><tbody ng-show="$ctrl.isLoading"><tr><td colspan="{{$ctrl.fields.length}}" class="text-center"><i class="fa fa-spinner fa-spin" aria-hidden="true"></i></td></tr></tbody><tbody ng-hide="$ctrl.hasCollectionItems() || $ctrl.isLoading"><tr><td colspan="{{$ctrl.fields.length}}" class="text-center"><span>No results</span></td></tr></tbody></table>',bindings:{rowCollection:"<",fields:"<",rowOnClick:"&?",pipe:"&?",isLoading:"<?"},controller:function(){var e;return e=this,e.$onChanges=function(n){var t;return t=_.get(n,"rowCollection.currentValue"),t?e.displayedCollection=angular.copy(t):void 0},e.hasCollectionItems=function(){return!_.isEmpty(e.displayedCollection)},e}})}.call(this),function(){angular.module("mnoUiElements").component("mnoTasksMenu",{template:'<div class="tasks-menu"><button ng-repeat="menu in $ctrl.menus" class="btn btn-default menu-item {{menu.name}}" ng-class="{ \'selected\': menu.selected }" ng-click="$ctrl.menuOnClick(menu)"><span ng-bind="menu.label"></span></button></div>',bindings:{onSelect:"&",menus:"<"},controller:["$element",function(){var e;return e=this,e.menuOnClick=function(n){return _.each(e.menus,function(e){return e.selected=!1,null}),n.selected=!0,e.onSelect({$event:{menu:n}})},e}]})}.call(this),function(){angular.module("mnoUiElements").component("mnoValidation",{template:"<p ng-class=\"$ctrl.valid ? 'checked' : 'unchecked'\"><i class=\"fa\" ng-class=\"$ctrl.valid ? 'fa-check-circle' : 'fa-times-circle'\"></i> {{$ctrl.message}}</p>",bindings:{valid:"=",message:"@"},controller:function(){var e;e=this}})}.call(this),function(){angular.module("mnoUiElements").component("mnoWidget",{template:'<div class="widget"><div class="header"><div class="row"><div class="col-xs-12"><div class="pull-left"><i class="fa" ng-class="$ctrl.icon"></i> <span class="heading">{{$ctrl.heading}}</span></div><div ng-transclude="header"></div></div></div></div><div class="body"><div class="row"><div class="col-xs-12 loading" ng-show="$ctrl.isLoading"><mno-loading-ellipsis></mno-loading-ellipsis></div><div class="col-xs-12" ng-hide="$ctrl.isLoading"><div ng-transclude="body"></div></div></div></div><div class="footer"><div class="row"><div class="col-xs-12"><div ng-transclude="footer"></div></div></div></div></div>',transclude:{header:"mnoWidgetHeader",body:"mnoWidgetBody",footer:"?mnoWidgetFooter"},bindings:{icon:"@",isLoading:"=",heading:"@?"},controller:function(){var e;e=this}})}.call(this);